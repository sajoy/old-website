!function(t){var e={};function r(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:s})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";function s(){console.log("decorating");const t=[{used:0,class:"left-stars"},{used:0,class:"left-colons"},{used:0,class:"left-under"},{used:0,class:"right-colons"},{used:0,class:"right-arrows"},{used:0,class:"squiggles"},{used:0,class:"colons"},{used:0,class:"slashes"},{used:0,class:"equals"},{used:0,class:"squares"}];let e=0;document.querySelectorAll(".random-decor li").forEach((r,s)=>{const n=t.filter(t=>t.used===e).getRandom();n.used++,r.setAttribute("class",n.class),s%t.length==t.length-1&&e++})}r.d(e,"a",function(){return s}),Array.prototype.getRandom=function(){return this[Math.floor(Math.random()*this.length)]}},function(t,e,r){"use strict";r.r(e);var s=r(0);class n{constructor(t){this.data={};for(let e in t)this.data[e]=t[e];console.log(this)}render(){const t=document.querySelector("#project-template");this.element=document.importNode(t.content,!0);for(let t in this.data){let r=this.data[t];if("category"===t){this.element.querySelector("article").setAttribute("data-category",r);continue}let s=this.element.querySelector(`[data-content="${t}"]`);"image"!==t?Array.isArray(r)?r.forEach(t=>{let r=document.createElement("li");r.innerHTML=e(t),s.appendChild(r)}):s.innerHTML=r:(s.setAttribute("src",`./imgs/${r}`),s.setAttribute("alt","gif of project"))}function e(t){return"string"==typeof t?t:`<a href="${t.link}" target="_blank">${t.text}</a>`}document.querySelector("#work section").appendChild(this.element)}}var o=class{fetch(){fetch("./js/projects.json").then(t=>t.json()).then(t=>this.load(t))}load(t){this.list=t.sort((t,e)=>parseInt(t.year)-parseInt(e.year)).map(t=>new n(t)),this.list.forEach(t=>{t.render()}),Object(s.a)()}};({init:function(){this.loadProjects()},loadProjects:function(){(new o).fetch()}}).init()}]);